import sqlite3
from typing import List, Tuple, Optional

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
DATABASE_PATH = "barbershop.db"
SQL_SCRIPT_PATH = "Home_work_34_1.sql"


def read_sql_file(filepath: str) -> str:
    """–ß–∏—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç SQL-—Å–∫—Ä–∏–ø—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ."""
    with open(filepath, 'r', encoding='utf-8') as file:
        return file.read()


def execute_script(conn: sqlite3.Connection, script: str) -> None:
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç —Å–∫—Ä–∏–ø—Ç–∞, —Å–æ–∑–¥–∞—ë—Ç –∫—É—Ä—Å–æ—Ä, –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ executescript, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è."""
    cursor = conn.cursor()
    cursor.executescript(script)
    conn.commit()


def find_appointment_by_phone(conn: sqlite3.Connection, phone: str) -> List[Tuple]:
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π SELECT-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞."""
    cursor = conn.cursor()
    query = """
    SELECT 
        a.id,
        a.name,
        a.phone,
        a.date,
        m.first_name || ' ' || m.last_name AS master_name,
        GROUP_CONCAT(s.title, ', ') AS services,
        a.status,
        a.comment
    FROM appointments a
    LEFT JOIN masters m ON a.master_id = m.id
    LEFT JOIN appointments_services aps ON a.id = aps.appointment_id
    LEFT JOIN services s ON aps.service_id = s.id
    WHERE a.phone = ?
    GROUP BY a.id
    ORDER BY a.date DESC
    """
    cursor.execute(query, (phone,))
    return cursor.fetchall()


def find_appointment_by_comment(conn: sqlite3.Connection, comment_part: str) -> List[Tuple]:
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —á–∞—Å—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∏—â–µ—Ç –∑–∞–ø–∏—Å–∏, –≥–¥–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É."""
    cursor = conn.cursor()
    query = """
    SELECT 
        a.id,
        a.name,
        a.phone,
        a.date,
        m.first_name || ' ' || m.last_name AS master_name,
        GROUP_CONCAT(s.title, ', ') AS services,
        a.status,
        a.comment
    FROM appointments a
    LEFT JOIN masters m ON a.master_id = m.id
    LEFT JOIN appointments_services aps ON a.id = aps.appointment_id
    LEFT JOIN services s ON aps.service_id = s.id
    WHERE a.comment LIKE ?
    GROUP BY a.id
    ORDER BY a.date DESC
    """
    cursor.execute(query, (f'%{comment_part}%',))
    return cursor.fetchall()


def create_appointment(conn: sqlite3.Connection, client_name: str, client_phone: str, 
                      master_name: str, services_list: List[str], comment: str = None) -> int:
    """–°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ –∫–ª–∏–µ–Ω—Ç–æ–≤."""
    cursor = conn.cursor()
    
    # –ü–æ–∏—Å–∫ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç "–ò–º—è –§–∞–º–∏–ª–∏—è")
    name_parts = master_name.split()
    if len(name_parts) >= 2:
        first_name, last_name = name_parts[0], name_parts[1]
        cursor.execute(
            "SELECT id FROM masters WHERE first_name = ? AND last_name = ?",
            (first_name, last_name)
        )
    else:
        cursor.execute(
            "SELECT id FROM masters WHERE first_name = ? OR last_name = ?",
            (master_name, master_name)
        )
    
    master_result = cursor.fetchone()
    if not master_result:
        raise ValueError(f"–ú–∞—Å—Ç–µ—Ä '{master_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    master_id = master_result[0]
    
    # –ü–æ–∏—Å–∫ —É—Å–ª—É–≥ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º
    service_ids = []
    for service_title in services_list:
        cursor.execute("SELECT id FROM services WHERE title = ?", (service_title,))
        service_result = cursor.fetchone()
        if not service_result:
            raise ValueError(f"–£—Å–ª—É–≥–∞ '{service_title}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        service_ids.append(service_result[0])
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    cursor.execute(
        "INSERT INTO appointments (name, phone, master_id, comment) VALUES (?, ?, ?, ?)",
        (client_name, client_phone, master_id, comment)
    )
    
    appointment_id = cursor.lastrowid
    
    # –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Å —É—Å–ª—É–≥–∞–º–∏
    for service_id in service_ids:
        cursor.execute(
            "INSERT INTO appointments_services (appointment_id, service_id) VALUES (?, ?)",
            (appointment_id, service_id)
        )
    
    conn.commit()
    return appointment_id


# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
if __name__ == "__main__":
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        # –ß—Ç–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-—Å–∫—Ä–∏–ø—Ç–∞
        sql_script = read_sql_file(SQL_SCRIPT_PATH)
        
        with sqlite3.connect(DATABASE_PATH) as conn:
            execute_script(conn, sql_script)
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞")
            
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
            print("\nüîç –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É '+7(999)111-22-33':")
            phone_results = find_appointment_by_phone(conn, '+7(999)111-22-33')
            for result in phone_results:
                print(f"ID: {result[0]}, –ö–ª–∏–µ–Ω—Ç: {result[1]}, –ú–∞—Å—Ç–µ—Ä: {result[4]}, –£—Å–ª—É–≥–∏: {result[5]}")
            
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
            print("\nüîç –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é (—Å–æ–¥–µ—Ä–∂–∏—Ç '–∫–ª–∏–µ–Ω—Ç'):")
            comment_results = find_appointment_by_comment(conn, '–∫–ª–∏–µ–Ω—Ç')
            for result in comment_results:
                print(f"ID: {result[0]}, –ö–ª–∏–µ–Ω—Ç: {result[1]}, –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {result[7]}")
            
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
            print("\n‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:")
            try:
                new_appointment_id = create_appointment(
                    conn,
                    client_name="–í–ª–∞–¥–∏–º–∏—Ä –¢–µ—Å—Ç–æ–≤",
                    client_phone="+7(999)000-11-22",
                    master_name="–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                    services_list=["–ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞", "–°—Ç—Ä–∏–∂–∫–∞ –±–æ—Ä–æ–¥—ã"],
                    comment="–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å"
                )
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å ID: {new_appointment_id}")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                verification_results = find_appointment_by_phone(conn, "+7(999)000-11-22")
                if verification_results:
                    result = verification_results[0]
                    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞: {result[1]} –∑–∞–ø–∏—Å–∞–Ω –∫ {result[4]} –Ω–∞ —É—Å–ª—É–≥–∏: {result[5]}")
                
            except ValueError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: {e}")
            
            print("\nüìä –í—Å–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            cursor = conn.cursor()
            cursor.execute("""
                SELECT 
                    a.id,
                    a.name,
                    a.phone,
                    m.first_name || ' ' || m.last_name AS master_name,
                    a.status,
                    a.comment
                FROM appointments a
                LEFT JOIN masters m ON a.master_id = m.id
                ORDER BY a.id
            """)
            all_appointments = cursor.fetchall()
            for appointment in all_appointments:
                print(f"ID: {appointment[0]}, {appointment[1]} ({appointment[2]}) -> {appointment[3]}, –°—Ç–∞—Ç—É—Å: {appointment[4]}")
                
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {SQL_SCRIPT_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
